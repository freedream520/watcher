var fs = require('fs');
var path = require('path');

/*同步拷贝文件*/
exports.copyFileSync = function(fromPath,toPath){
	if(fs.existsSync(toPath)){
		fs.unlinkSync(toPath);
	}else{
		exports.mkdirSync(path.dirname(toPath));
	}
	var BUF_LENGTH = 64*1024
	var buff = new Buffer(BUF_LENGTH)
	var fdr = fs.openSync(fromPath, 'r');
	var fdw = fs.openSync(toPath, 'w');
	var bytesRead = 1;
	var pos = 0;
	while (bytesRead > 0){
		bytesRead = fs.readSync(fdr, buff, 0, BUF_LENGTH, pos);
		fs.writeSync(fdw,buff,0,bytesRead);
		pos += bytesRead;
	}
	
	fs.closeSync(fdr);
	fs.closeSync(fdw);
}
/*同步递归创建目录*/
exports.mkdirSync = function(mkPath){
	var parentPath = path.dirname(mkPath);
	if(!fs.existsSync(parentPath)){
		exports.mkdirSync(parentPath);
	}
	if(!fs.existsSync(mkPath)){
		fs.mkdirSync(mkPath);
	}
}
/*同步递归删除目录*/
exports.rmdirSync = function(p) {
    //如果文件路径不存在或文件路径不是文件夹则直接返回
    if(fs.existsSync(p)){
    	var stat = fs.statSync(p);
    	if(stat.isDirectory()){
    		var files = fs.readdirSync(p);
    		files.forEach(function(file) {
	            var fullName = path.join(p, file);
	            if (fs.statSync(fullName).isDirectory()) {
	                exports.rmdirSync(fullName);
	            } else {
	                fs.unlinkSync(fullName);
	            }
	        });
		    fs.rmdirSync(p);
    	}else{
    		fs.unlinkSync(p);
    	}
    }
}